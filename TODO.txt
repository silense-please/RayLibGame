
DONE
mb array[10] to count average fps
test button inputs and gamepad - working
make fps independent game loop (with sf::Clock i guess)
divide code to different cpp files
window resizing - use render target texture - DONE
screen scaling
recreate everything from sfml template
character control (inputs) - add input method choosing (gamepad 1, gamepad 2, keyboard?) and current detected gamepads


IN PROGRESS
divide code to funtions and structs(like: Playerstruct, draw_debugging_metrics, draw, toggle_fps_lock, ...)


TODO - make test game

objects render
level editor (in txt for now)
pause system
sound system
make RPG-7 and collisions
camera
maybe make rez options (with buttons only for now)
try different "scenes" or/and side-scrolling
try OpenGL integration
try online sockets
maybe build custom fps lock with sleep(sf::asMicroseconds) (or with chrono and thread)
switch fps/frametime outputs with buttons
Define and write down to txt all game(window) inputs
Texture loading and unloading system

COMMIT THE GetCurrentMonitor() BUGFIX!!!

Problems:
    fix ToggleFullscreen by implementing code from SetWindowMonitor(which is sets fullscreen too in fact)
    Performance slowdown - might be a bottleneck(probably fine) - when on primary 1440p display in borderless mode
        - fps is dropping form ~2500 to ~1700, frametime from ~0,3-4ms to ~0,5ms, in motherloving ToggleFullscreen() it's rising up to 3000fps!
    Initial resolution and aspect ratio is hardcoded - might need resize_texture2d
    Cursor is disappearing in borderless with discord or OBS - Well... what can I do?
    FPS Monitor (sometimes?) crashes SFML window upon closing FPS Monitor



